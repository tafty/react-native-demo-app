// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Screen Should render values when network not connected 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "marginBottom": 32,
      "marginHorizontal": 32,
      "marginTop": 24,
    }
  }
>
  <RCTScrollView>
    <View>
      <Text
        testID="is_network_connected"
      >
        is_network_connected
        : 
        no
      </Text>
      <Text
        testID="is_internet_reachable"
      >
        is_internet_reachable
        : 
        no
      </Text>
      <Text
        testID="network_connection_type"
      >
        network_connection_type
        : 
        none
      </Text>
      <Text
        testID="current_realm_path"
      >
        current_realm_path
        : 
        test2.realm
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginTop": 16,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgba(0, 124, 255, 1)",
              "borderColor": "rgba(0, 124, 255, 1)",
              "borderRadius": 4,
              "borderWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 16,
            }
          }
          testID="settings-button"
        >
          <Text
            style={
              Object {
                "color": "rgba(255, 255, 255, 1)",
                "flex": 0,
                "fontSize": 16,
                "fontWeight": "bold",
                "textAlign": "center",
              }
            }
            testID="settings-button-label"
          >
            SETTINGS
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginTop": 16,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgba(0, 124, 255, 1)",
              "borderColor": "rgba(0, 124, 255, 1)",
              "borderRadius": 4,
              "borderWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 16,
            }
          }
          testID="log-out-button"
        >
          <Text
            style={
              Object {
                "color": "rgba(255, 255, 255, 1)",
                "flex": 0,
                "fontSize": 16,
                "fontWeight": "bold",
                "textAlign": "center",
              }
            }
            testID="log-out-button-label"
          >
            LOG_OUT
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`Home Screen Should render when network connected 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "marginBottom": 32,
      "marginHorizontal": 32,
      "marginTop": 24,
    }
  }
>
  <RCTScrollView>
    <View>
      <Text
        testID="is_network_connected"
      >
        is_network_connected
        : 
        yes
      </Text>
      <Text
        testID="is_internet_reachable"
      >
        is_internet_reachable
        : 
        yes
      </Text>
      <Text
        testID="network_connection_type"
      >
        network_connection_type
        : 
        wifi
      </Text>
      <Text
        testID="current_realm_path"
      >
        current_realm_path
        : 
        test.realm
      </Text>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginTop": 16,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgba(0, 124, 255, 1)",
              "borderColor": "rgba(0, 124, 255, 1)",
              "borderRadius": 4,
              "borderWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 16,
            }
          }
          testID="settings-button"
        >
          <Text
            style={
              Object {
                "color": "rgba(255, 255, 255, 1)",
                "flex": 0,
                "fontSize": 16,
                "fontWeight": "bold",
                "textAlign": "center",
              }
            }
            testID="settings-button-label"
          >
            SETTINGS
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginTop": 16,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgba(0, 124, 255, 1)",
              "borderColor": "rgba(0, 124, 255, 1)",
              "borderRadius": 4,
              "borderWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 16,
            }
          }
          testID="log-out-button"
        >
          <Text
            style={
              Object {
                "color": "rgba(255, 255, 255, 1)",
                "flex": 0,
                "fontSize": 16,
                "fontWeight": "bold",
                "textAlign": "center",
              }
            }
            testID="log-out-button-label"
          >
            LOG_OUT
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
