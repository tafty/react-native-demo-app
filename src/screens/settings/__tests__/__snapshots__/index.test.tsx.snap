// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Settings Screen Should render correctly and diagnostics button should navigate to correct screens 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "icon": "md-information-circle",
          "onPress": [Function],
          "title": "Diagnostics",
        },
        Object {
          "icon": "md-list-box",
          "onPress": [Function],
          "title": "Logs",
        },
        Object {
          "icon": "md-book",
          "onPress": [Function],
          "title": "Storybook",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": 32,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginVertical": 8,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0, 124, 255, 1)",
                "borderColor": "rgba(0, 124, 255, 1)",
                "borderRadius": 4,
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 16,
              }
            }
            testID="Diagnostics-button"
          >
            <Text
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "flex": 0,
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
              testID="Diagnostics-button-label"
            >
              DIAGNOSTICS
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginVertical": 8,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0, 124, 255, 1)",
                "borderColor": "rgba(0, 124, 255, 1)",
                "borderRadius": 4,
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 16,
              }
            }
            testID="Logs-button"
          >
            <Text
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "flex": 0,
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
              testID="Logs-button-label"
            >
              LOGS
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginVertical": 8,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0, 124, 255, 1)",
                "borderColor": "rgba(0, 124, 255, 1)",
                "borderRadius": 4,
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 16,
              }
            }
            testID="Storybook-button"
          >
            <Text
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "flex": 0,
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
              testID="Storybook-button-label"
            >
              STORYBOOK
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`Settings Screen Should render correctly and logs button should navigate to correct screens 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "icon": "md-information-circle",
          "onPress": [Function],
          "title": "Diagnostics",
        },
        Object {
          "icon": "md-list-box",
          "onPress": [Function],
          "title": "Logs",
        },
        Object {
          "icon": "md-book",
          "onPress": [Function],
          "title": "Storybook",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
        "paddingHorizontal": 32,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginVertical": 8,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0, 124, 255, 1)",
                "borderColor": "rgba(0, 124, 255, 1)",
                "borderRadius": 4,
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 16,
              }
            }
            testID="Diagnostics-button"
          >
            <Text
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "flex": 0,
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
              testID="Diagnostics-button-label"
            >
              DIAGNOSTICS
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginVertical": 8,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0, 124, 255, 1)",
                "borderColor": "rgba(0, 124, 255, 1)",
                "borderRadius": 4,
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 16,
              }
            }
            testID="Logs-button"
          >
            <Text
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "flex": 0,
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
              testID="Logs-button-label"
            >
              LOGS
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginVertical": 8,
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0, 124, 255, 1)",
                "borderColor": "rgba(0, 124, 255, 1)",
                "borderRadius": 4,
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 16,
              }
            }
            testID="Storybook-button"
          >
            <Text
              style={
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "flex": 0,
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
              testID="Storybook-button-label"
            >
              STORYBOOK
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
